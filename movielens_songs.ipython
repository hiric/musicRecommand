# coding: utf-8
#解析成 userid itemid rating timestamp行格式
import json
import sys

def is_null(s):
    return len(s.split(","))>2

def parse_song_info(song_info):
    try:
        song_id, name, artist, popularity = song_info.split(":::")
        #return ",".join([song_id,name,aritst,popularity])
        return ",".join([song_id,"1.0","130000"]) #分别代表itemid, rating, timestamp
    except Exception as e:
        return ""
    
def parse_playlist_line(in_line):
    try:
        contents = in_line.strip().split("\t")
        name, tags, playlist_id,subscribed_count = contents[0].split("##") #取出解析出的txt文件的歌单信息
        songs_info = map(lambda x: playlist_id+ ","+parse_song_info(x),contents[1:]) #将playlist作为userID
        songs_info = filter(is_null,songs_info)  # 过滤掉不合格的信息
        return "\n".join(songs_info)
    except Exception as e:
        print(e)
        return False
    
def parse_file(in_file,out_file):
    results = ''
    out = open(out_file,'w',encoding = 'utf-8')
    for line in open(in_file,encoding = 'utf-8'):
        try:
            results = parse_playlist_line(line)
        except Exception as e:
            continue
        if(results):
            out.write(str(results.encode('utf-8').strip())+ "\n")
    out.close()
